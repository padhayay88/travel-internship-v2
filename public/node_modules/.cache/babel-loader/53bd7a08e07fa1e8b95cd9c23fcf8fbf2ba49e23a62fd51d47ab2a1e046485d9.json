{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Attachments\\\\Desktop\\\\raam\\\\travel-internship-v2\\\\src\\\\components\\\\CurrencyLanguageSwitcher.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../contexts/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = {\n  en: {\n    welcome: \"Welcome!\",\n    priceLabel: \"Price\",\n    selectLang: \"Language\",\n    selectCurrency: \"Currency\"\n  },\n  es: {\n    welcome: \"¡Bienvenido!\",\n    priceLabel: \"Precio\",\n    selectLang: \"Idioma\",\n    selectCurrency: \"Moneda\"\n  },\n  fr: {\n    welcome: \"Bienvenue!\",\n    priceLabel: \"Prix\",\n    selectLang: \"Langue\",\n    selectCurrency: \"Devise\"\n  }\n};\nconst exchangeRates = {\n  USD: 1,\n  EUR: 0.93,\n  GBP: 0.80\n};\nconst CurrencyLanguageSwitcher = () => {\n  _s();\n  // Get locale and currency from context, along with setters\n  const {\n    locale,\n    currency,\n    selectLang,\n    selectCurrency\n  } = useContext(AppContext);\n\n  // Local state for price (base price in USD)\n  const [price] = useState(100);\n\n  // Map locale codes to your translation keys (en, es, fr)\n  // Assuming locale is like 'en-US', 'fr-FR', etc.\n  const languageCode = locale.split('-')[0];\n\n  // Translation based on language code\n  const localized = translations[languageCode] || translations.en;\n\n  // Calculate converted price based on selected currency\n  const convertedPrice = (price * (exchangeRates[currency] || 1)).toFixed(2);\n\n  // On first load, try to detect language and currency from localStorage or IP API\n  useEffect(() => {\n    const savedLang = localStorage.getItem('language');\n    const savedCurr = localStorage.getItem('currency');\n    if (!savedLang && !savedCurr) {\n      fetch('https://ipapi.co/json/').then(res => res.json()).then(data => {\n        if (data.country_code === 'FR') selectLang({\n          target: {\n            value: 'fr-FR'\n          }\n        });else if (data.country_code === 'ES') selectLang({\n          target: {\n            value: 'es-ES'\n          }\n        });else selectLang({\n          target: {\n            value: 'en-US'\n          }\n        });\n        if (data.currency && ['USD', 'EUR', 'GBP'].includes(data.currency)) {\n          selectCurrency({\n            target: {\n              value: data.currency\n            }\n          });\n        } else {\n          selectCurrency({\n            target: {\n              value: 'USD'\n            }\n          });\n        }\n      }).catch(() => {\n        // fallback\n        selectLang({\n          target: {\n            value: 'en-US'\n          }\n        });\n        selectCurrency({\n          target: {\n            value: 'USD'\n          }\n        });\n      });\n    } else {\n      if (savedLang) selectLang({\n        target: {\n          value: savedLang\n        }\n      });\n      if (savedCurr) selectCurrency({\n        target: {\n          value: savedCurr\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Save changes to localStorage when locale or currency changes\n  useEffect(() => {\n    localStorage.setItem('language', locale);\n  }, [locale]);\n  useEffect(() => {\n    localStorage.setItem('currency', currency);\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: localized.welcome\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [localized.priceLabel, \": \", convertedPrice, \" \", currency]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [localized.selectLang, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: locale,\n      onChange: selectLang,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en-US\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"es-ES\",\n        children: \"Espa\\xF1ol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"fr-FR\",\n        children: \"Fran\\xE7ais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [localized.selectCurrency, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: currency,\n      onChange: selectCurrency,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USD\",\n        children: \"USD ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EUR\",\n        children: \"EUR (\\u20AC)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GBP\",\n        children: \"GBP (\\xA3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyLanguageSwitcher, \"dbjL5f5xL46PJfGVUCwziXhDYIg=\");\n_c = CurrencyLanguageSwitcher;\nexport default CurrencyLanguageSwitcher;\nvar _c;\n$RefreshReg$(_c, \"CurrencyLanguageSwitcher\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AppContext","jsxDEV","_jsxDEV","translations","en","welcome","priceLabel","selectLang","selectCurrency","es","fr","exchangeRates","USD","EUR","GBP","CurrencyLanguageSwitcher","_s","locale","currency","price","languageCode","split","localized","convertedPrice","toFixed","savedLang","localStorage","getItem","savedCurr","fetch","then","res","json","data","country_code","target","value","includes","catch","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/shash/OneDrive/Attachments/Desktop/raam/travel-internship-v2/src/components/CurrencyLanguageSwitcher.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../contexts/AppContext';\n\nconst translations = {\n  en: { welcome: \"Welcome!\", priceLabel: \"Price\", selectLang: \"Language\", selectCurrency: \"Currency\" },\n  es: { welcome: \"¡Bienvenido!\", priceLabel: \"Precio\", selectLang: \"Idioma\", selectCurrency: \"Moneda\" },\n  fr: { welcome: \"Bienvenue!\", priceLabel: \"Prix\", selectLang: \"Langue\", selectCurrency: \"Devise\" },\n};\n\nconst exchangeRates = {\n  USD: 1,\n  EUR: 0.93,\n  GBP: 0.80,\n};\n\nconst CurrencyLanguageSwitcher = () => {\n  // Get locale and currency from context, along with setters\n  const { locale, currency, selectLang, selectCurrency } = useContext(AppContext);\n\n  // Local state for price (base price in USD)\n  const [price] = useState(100);\n\n  // Map locale codes to your translation keys (en, es, fr)\n  // Assuming locale is like 'en-US', 'fr-FR', etc.\n  const languageCode = locale.split('-')[0]; \n\n  // Translation based on language code\n  const localized = translations[languageCode] || translations.en;\n\n  // Calculate converted price based on selected currency\n  const convertedPrice = (price * (exchangeRates[currency] || 1)).toFixed(2);\n\n  // On first load, try to detect language and currency from localStorage or IP API\n  useEffect(() => {\n    const savedLang = localStorage.getItem('language');\n    const savedCurr = localStorage.getItem('currency');\n\n    if (!savedLang && !savedCurr) {\n      fetch('https://ipapi.co/json/')\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.country_code === 'FR') selectLang({ target: { value: 'fr-FR' } });\n          else if (data.country_code === 'ES') selectLang({ target: { value: 'es-ES' } });\n          else selectLang({ target: { value: 'en-US' } });\n\n          if (data.currency && ['USD', 'EUR', 'GBP'].includes(data.currency)) {\n            selectCurrency({ target: { value: data.currency } });\n          } else {\n            selectCurrency({ target: { value: 'USD' } });\n          }\n        })\n        .catch(() => {\n          // fallback\n          selectLang({ target: { value: 'en-US' } });\n          selectCurrency({ target: { value: 'USD' } });\n        });\n    } else {\n      if (savedLang) selectLang({ target: { value: savedLang } });\n      if (savedCurr) selectCurrency({ target: { value: savedCurr } });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Save changes to localStorage when locale or currency changes\n  useEffect(() => {\n    localStorage.setItem('language', locale);\n  }, [locale]);\n\n  useEffect(() => {\n    localStorage.setItem('currency', currency);\n  }, [currency]);\n\n  return (\n    <div>\n      <h2>{localized.welcome}</h2>\n      <p>{localized.priceLabel}: {convertedPrice} {currency}</p>\n\n      <label>{localized.selectLang}:</label>\n      <select value={locale} onChange={selectLang}>\n        <option value=\"en-US\">English</option>\n        <option value=\"es-ES\">Español</option>\n        <option value=\"fr-FR\">Français</option>\n      </select>\n\n      <br /><br />\n\n      <label>{localized.selectCurrency}:</label>\n      <select value={currency} onChange={selectCurrency}>\n        <option value=\"USD\">USD ($)</option>\n        <option value=\"EUR\">EUR (€)</option>\n        <option value=\"GBP\">GBP (£)</option>\n      </select>\n    </div>\n  );\n};\n\nexport default CurrencyLanguageSwitcher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAG;EACnBC,EAAE,EAAE;IAAEC,OAAO,EAAE,UAAU;IAAEC,UAAU,EAAE,OAAO;IAAEC,UAAU,EAAE,UAAU;IAAEC,cAAc,EAAE;EAAW,CAAC;EACpGC,EAAE,EAAE;IAAEJ,OAAO,EAAE,cAAc;IAAEC,UAAU,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,cAAc,EAAE;EAAS,CAAC;EACrGE,EAAE,EAAE;IAAEL,OAAO,EAAE,YAAY;IAAEC,UAAU,EAAE,MAAM;IAAEC,UAAU,EAAE,QAAQ;IAAEC,cAAc,EAAE;EAAS;AAClG,CAAC;AAED,MAAMG,aAAa,GAAG;EACpBC,GAAG,EAAE,CAAC;EACNC,GAAG,EAAE,IAAI;EACTC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC;EACA,MAAM;IAAEC,MAAM;IAAEC,QAAQ;IAAEX,UAAU;IAAEC;EAAe,CAAC,GAAGX,UAAU,CAACG,UAAU,CAAC;;EAE/E;EACA,MAAM,CAACmB,KAAK,CAAC,GAAGpB,QAAQ,CAAC,GAAG,CAAC;;EAE7B;EACA;EACA,MAAMqB,YAAY,GAAGH,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMC,SAAS,GAAGnB,YAAY,CAACiB,YAAY,CAAC,IAAIjB,YAAY,CAACC,EAAE;;EAE/D;EACA,MAAMmB,cAAc,GAAG,CAACJ,KAAK,IAAIR,aAAa,CAACO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC;;EAE1E;EACA1B,SAAS,CAAC,MAAM;IACd,MAAM2B,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAElD,IAAI,CAACF,SAAS,IAAI,CAACG,SAAS,EAAE;MAC5BC,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAIA,IAAI,CAACC,YAAY,KAAK,IAAI,EAAE3B,UAAU,CAAC;UAAE4B,MAAM,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE,CAAC,CAAC,CAAC,KACtE,IAAIH,IAAI,CAACC,YAAY,KAAK,IAAI,EAAE3B,UAAU,CAAC;UAAE4B,MAAM,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE,CAAC,CAAC,CAAC,KAC3E7B,UAAU,CAAC;UAAE4B,MAAM,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE,CAAC,CAAC;QAE/C,IAAIH,IAAI,CAACf,QAAQ,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAACmB,QAAQ,CAACJ,IAAI,CAACf,QAAQ,CAAC,EAAE;UAClEV,cAAc,CAAC;YAAE2B,MAAM,EAAE;cAAEC,KAAK,EAAEH,IAAI,CAACf;YAAS;UAAE,CAAC,CAAC;QACtD,CAAC,MAAM;UACLV,cAAc,CAAC;YAAE2B,MAAM,EAAE;cAAEC,KAAK,EAAE;YAAM;UAAE,CAAC,CAAC;QAC9C;MACF,CAAC,CAAC,CACDE,KAAK,CAAC,MAAM;QACX;QACA/B,UAAU,CAAC;UAAE4B,MAAM,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE,CAAC,CAAC;QAC1C5B,cAAc,CAAC;UAAE2B,MAAM,EAAE;YAAEC,KAAK,EAAE;UAAM;QAAE,CAAC,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC,MAAM;MACL,IAAIX,SAAS,EAAElB,UAAU,CAAC;QAAE4B,MAAM,EAAE;UAAEC,KAAK,EAAEX;QAAU;MAAE,CAAC,CAAC;MAC3D,IAAIG,SAAS,EAAEpB,cAAc,CAAC;QAAE2B,MAAM,EAAE;UAAEC,KAAK,EAAER;QAAU;MAAE,CAAC,CAAC;IACjE;IACA;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA9B,SAAS,CAAC,MAAM;IACd4B,YAAY,CAACa,OAAO,CAAC,UAAU,EAAEtB,MAAM,CAAC;EAC1C,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZnB,SAAS,CAAC,MAAM;IACd4B,YAAY,CAACa,OAAO,CAAC,UAAU,EAAErB,QAAQ,CAAC;EAC5C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEhB,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAKlB,SAAS,CAACjB;IAAO;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5B1C,OAAA;MAAAsC,QAAA,GAAIlB,SAAS,CAAChB,UAAU,EAAC,IAAE,EAACiB,cAAc,EAAC,GAAC,EAACL,QAAQ;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1D1C,OAAA;MAAAsC,QAAA,GAAQlB,SAAS,CAACf,UAAU,EAAC,GAAC;IAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtC1C,OAAA;MAAQkC,KAAK,EAAEnB,MAAO;MAAC4B,QAAQ,EAAEtC,UAAW;MAAAiC,QAAA,gBAC1CtC,OAAA;QAAQkC,KAAK,EAAC,OAAO;QAAAI,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC1C,OAAA;QAAQkC,KAAK,EAAC,OAAO;QAAAI,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtC1C,OAAA;QAAQkC,KAAK,EAAC,OAAO;QAAAI,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAET1C,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAA1C,OAAA;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEZ1C,OAAA;MAAAsC,QAAA,GAAQlB,SAAS,CAACd,cAAc,EAAC,GAAC;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1C1C,OAAA;MAAQkC,KAAK,EAAElB,QAAS;MAAC2B,QAAQ,EAAErC,cAAe;MAAAgC,QAAA,gBAChDtC,OAAA;QAAQkC,KAAK,EAAC,KAAK;QAAAI,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpC1C,OAAA;QAAQkC,KAAK,EAAC,KAAK;QAAAI,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpC1C,OAAA;QAAQkC,KAAK,EAAC,KAAK;QAAAI,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/EID,wBAAwB;AAAA+B,EAAA,GAAxB/B,wBAAwB;AAiF9B,eAAeA,wBAAwB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}